version: "3"

services:
  node:
    image: node:lts
    container_name: node
    volumes:
      - /code:/code
    tty: true
    working_dir: /code
    environment:
      TZ: Asia/Shanghai

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./redis/data:/data
    # 设置登录密码
    command: redis-server --requirepass 123456

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      # root 用户的密码
      MYSQL_ROOT_PASSWORD: secret
      # 普通用户的账号密码
      MYSQL_USER: normal
      MYSQL_PASSWORD: secret
      TZ: Asia/Shanghai
    volumes:
      - ./mysql:/var/lib/mysql
    # 无法使用caching_sha2_password进行连接时
    command: --default-authentication-plugin=mysql_native_password

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      # nginx 访问日志
      - ./nginx/log:/var/log/nginx
      - /code:/code
    environment:
      TZ: Asia/Shanghai

  jenkins:
    image: jenkinsci/blueocean
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    user: root
    volumes:
      - /code/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: rabbitmq:management # 此版本才带有管理界面
    container_name: rabbitmq
    ports:
      - "5672:5672" # mq本身
      - "15672:15672" # 管理界面
    environment:
      TZ: Asia/Shanghai

  es:
    image: elasticsearch:7.14.2
    container_name: es
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m # 限制使用内存,初始会直接使用16G以上内存
  
  postgres:
    image:  postgres:latest
    container_name: post
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_INITDB_ARGS: --auth=md5 # 使用不支持 scram-sha-256 登录时设置

  influx:
    image: influxdb:latest
    container_name: influx
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: rooot
      DOCKER_INFLUXDB_INIT_PASSWORD: my-password ## least 8 char
      DOCKER_INFLUXDB_INIT_ORG: my-org
      DOCKER_INFLUXDB_INIT_BUCKET: my-bucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: cwXmMd95WtP8q_RQWov_bUlKi8cXSRmCxrcgGV6SERLIoYv8gqa28hJ6jgukauqMhGJwNAGek9fuWlBPSU2QBw==
    ports: 
      - 8086:8086

  click:
    image: clickhouse/clickhouse-server
    container_name: click
    ports:
      - "9000:9000"
      - "8123:8123"
    environment:
      CLICKHOUSE_USER: normal
      CLICKHOUSE_PASSWORD: secret
    tty: true
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  cuda:
    image: nvidia/12.1.1-cudnn8-devel-ubuntu20.04
    container_name: cuda
    network_mode: host
    stdin_open: true
    tty: true
    runtime: nvidia